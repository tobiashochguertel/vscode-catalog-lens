name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  # Lint and typecheck jobs run on Ubuntu only
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-v2-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate metadata
        run: pnpm exec vscode-ext-gen --output src/generated/meta.ts --scope pnpmCatalogLens

      - name: Lint
        run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-v2-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate metadata
        run: pnpm exec vscode-ext-gen --output src/generated/meta.ts --scope pnpmCatalogLens

      - name: Typecheck
        run: pnpm typecheck

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-v2-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Generate metadata
        run: pnpm exec vscode-ext-gen --output src/generated/meta.ts --scope pnpmCatalogLens

      - name: Build
        run: pnpm build

      - name: Cache build output
        uses: actions/cache@v4
        with:
          path: dist
          key: build-${{ github.sha }}

  # Platform-specific test jobs using reusable workflows
  test-unix:
    needs: [build]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    uses: ./.github/workflows/test-unix.yml
    with:
      node-version: 'lts/*'
      runner-os: ${{ matrix.os }}

  test-windows:
    needs: [build]
    uses: ./.github/workflows/test-windows.yml
    with:
      node-version: 'lts/*'

  # E2E tests using reusable workflow
  e2e-unix:
    needs: [lint, typecheck, test-unix]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    uses: ./.github/workflows/e2e-test.yml
    with:
      node-version: 'lts/*'
      runner-os: ${{ matrix.os }}
      is-windows: false

  e2e-windows:
    needs: [lint, typecheck, test-windows]
    uses: ./.github/workflows/e2e-test.yml
    with:
      node-version: 'lts/*'
      runner-os: 'windows-latest'
      is-windows: true
