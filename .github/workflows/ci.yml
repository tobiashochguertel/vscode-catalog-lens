name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:
    inputs:
      package_manager:
        description: 'Package manager to use (npm, yarn, pnpm, bun)'
        required: false
        default: pnpm
        type: choice
        options:
          - npm
          - yarn
          - pnpm
          - bun

env:
  PM_TOOL: ${{ github.event.inputs.package_manager || 'pnpm' }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Typecheck
        run: pnpm typecheck

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [lts/*]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node version to ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Unit Tests
        run: pnpm test:run

  e2e:
    runs-on: ${{ matrix.os }}
    needs: [lint, typecheck, test]

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [lts/*]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Set node version to ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build extension
        run: pnpm build

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            xvfb \
            libgtk-3-0 \
            libgbm1 \
            libnss3 \
            libasound2 \
            libxss1 \
            libxtst6

      - name: Cache VS Code
        uses: actions/cache@v4
        with:
          path: .vscode-test
          key: ${{ runner.os }}-vscode-test-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-vscode-test-

      - name: Run E2E Tests (Linux)
        if: runner.os == 'Linux'
        run: xvfb-run -a pnpm test:e2e

      - name: Run E2E Tests (macOS/Windows)
        if: runner.os != 'Linux'
        run: pnpm test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-test-results-${{ matrix.os }}
          path: |
            .vscode-test/
            out/
          retention-days: 7
