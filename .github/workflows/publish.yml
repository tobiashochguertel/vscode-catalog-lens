name: Publish Extension

on:
  # Manual trigger - click "Run workflow" button on GitHub Actions tab
  workflow_dispatch:
    inputs:
      publish_marketplace:
        description: 'Publish to VS Code Marketplace'
        required: true
        type: boolean
        default: true
      publish_openvsx:
        description: 'Publish to Open VSX'
        required: true
        type: boolean
        default: true
      create_release:
        description: 'Create GitHub Release'
        required: true
        type: boolean
        default: true
  
  # Automatic trigger on version tags
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Run tests
        run: pnpm test
      
      - name: Type check
        run: pnpm typecheck
      
      - name: Lint
        run: pnpm lint

  build:
    name: Build & Package
    runs-on: ubuntu-latest
    needs: test
    outputs:
      version: ${{ steps.package_info.outputs.version }}
      vsix_file: ${{ steps.package_info.outputs.vsix_file }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build
        run: pnpm build
      
      - name: Package
        run: pnpm package
      
      - name: Get package info
        id: package_info
        run: |
          VERSION=$(node -p "require('./package.json').version")
          VSIX_FILE="catalog-lens-${VERSION}.vsix"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "vsix_file=${VSIX_FILE}" >> $GITHUB_OUTPUT
      
      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: '*.vsix'
          retention-days: 7

  publish-marketplace:
    name: Publish to VS Code Marketplace
    runs-on: ubuntu-latest
    needs: build
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_marketplace == 'true') ||
      github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Build
        run: pnpm build
      
      - name: Publish to Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: pnpm ext:publish

  publish-openvsx:
    name: Publish to Open VSX
    runs-on: ubuntu-latest
    needs: build
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_openvsx == 'true') ||
      github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Publish to Open VSX
        env:
          OVSX_PAT: ${{ secrets.OVSX_PAT }}
        run: |
          npx ovsx publish ${{ needs.build.outputs.vsix_file }} -p $OVSX_PAT

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build, publish-marketplace, publish-openvsx]
    if: |
      always() &&
      needs.build.result == 'success' &&
      ((github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true') ||
       github.event_name == 'push')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Create changelog
          echo "## Changes" > changelog.md
          echo "" >> changelog.md
          echo "$COMMITS" >> changelog.md
          
          cat changelog.md
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: v${{ needs.build.outputs.version }}
          tag_name: v${{ needs.build.outputs.version }}
          body_path: changelog.md
          files: ${{ needs.build.outputs.vsix_file }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
