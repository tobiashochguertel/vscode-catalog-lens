#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo "${BLUE}🔍 Running pre-commit checks...${NC}"
echo ""

# STEP 1: Auto-fix linting issues
echo "${BLUE}📝 Step 1/4: Linting and auto-fixing...${NC}"
pnpm lint:fix

# Check if auto-fix worked
if [ $? -ne 0 ]; then
  echo ""
  echo "${RED}❌ Lint auto-fix couldn't resolve all issues!${NC}"
  echo "${YELLOW}💡 Please fix the remaining errors manually.${NC}"
  echo "${YELLOW}💡 Run 'pnpm lint' to see all errors.${NC}"
  exit 1
fi

# Re-add auto-fixed files to staging
echo "${GREEN}✓ Auto-fix completed${NC}"
echo "${BLUE}📦 Re-staging auto-fixed files...${NC}"
git add -u

# STEP 2: Verify no lint errors remain
echo ""
echo "${BLUE}📋 Step 2/4: Verifying lint status...${NC}"
pnpm lint

if [ $? -ne 0 ]; then
  echo ""
  echo "${RED}❌ Lint errors still exist after auto-fix!${NC}"
  echo "${YELLOW}💡 Some issues require manual fixes.${NC}"
  echo "${YELLOW}💡 Please review and fix the errors above.${NC}"
  exit 1
fi

echo "${GREEN}✓ No lint errors${NC}"

# STEP 3: Type checking
echo ""
echo "${BLUE}🔧 Step 3/4: Type checking...${NC}"
pnpm typecheck

if [ $? -ne 0 ]; then
  echo ""
  echo "${RED}❌ Type check failed!${NC}"
  echo "${YELLOW}💡 Fix type errors before committing.${NC}"
  exit 1
fi

echo "${GREEN}✓ Type check passed${NC}"

# STEP 4: Build
echo ""
echo "${BLUE}🏗️  Step 4/4: Building...${NC}"
pnpm build > /dev/null 2>&1

if [ $? -ne 0 ]; then
  echo ""
  echo "${RED}❌ Build failed!${NC}"
  echo "${YELLOW}💡 Run 'pnpm build' to see build errors.${NC}"
  exit 1
fi

echo "${GREEN}✓ Build successful${NC}"

echo ""
echo "${GREEN}✅ All pre-commit checks passed!${NC}"
echo ""
